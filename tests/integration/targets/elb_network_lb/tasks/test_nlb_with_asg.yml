- block:

    # create instances
    - autoscaling_group:
        state: absent
        name: "{{ resource_prefix }}-webservers"
        wait_timeout: 900

    - autoscaling_launch_config:
        name: "{{ resource_prefix }}-web-lcfg"
        state: absent

    - name: Create launch config for testing
      autoscaling_launch_config:
        name: "{{ resource_prefix }}-web-lcfg"
        assign_public_ip: true
        image_id: "{{ ec2_ami_id }}"
        security_groups: "{{ sec_group.group_id }}"
        instance_type: t2.micro
        user_data: |
          #!/bin/bash
          set -x
          yum update -y --nogpgcheck
          yum install -y --nogpgcheck httpd
          echo "Hello Ansiblings!" >> /var/www/html/index.html
          service httpd start
        volumes:
          - device_name: /dev/xvda
            volume_size: 10
            volume_type: gp2
            delete_on_termination: true

    - name: Create autoscaling group for app server fleet
      autoscaling_group:
        name: "{{ resource_prefix }}-webservers"
        vpc_zone_identifier: "{{ nlb_subnets }}"
        launch_config_name: "{{ resource_prefix }}-web-lcfg"
        termination_policies:
        - OldestLaunchConfiguration
        - Default
        health_check_period: 600
        health_check_type: EC2
        replace_all_instances: true
        min_size: 0
        max_size: 2
        desired_capacity: 1
        wait_for_instances: true
        target_group_arns:
        - "{{ tg.target_group_arn }}"

  always:

    - autoscaling_group:
        state: absent
        name: "{{ resource_prefix }}-webservers"
        wait_timeout: 900
      ignore_errors: yes

    - autoscaling_launch_config:
        name: "{{ resource_prefix }}-web-lcfg"
        state: absent
      ignore_errors: yes
