- name: Run connection/aws_ssm tests on Windows managed node.
  hosts: aws_ssm_windows
  gather_facts: false

  vars:
    local_dir: '{{ local_tmp }}-{{ inventory_hostname }}-汉语'
    local_file: '{{ local_dir }}/汉语.txt'
    remote_dir: '{{ remote_tmp }}-汉语'
    remote_file: '{{ remote_dir }}/汉语.txt'
    remote_empty_file: '{{ remote_dir }}/empty.txt'

  tasks:
    - name: Wait for connection
      ansible.builtin.wait_for_connection:
        timeout: 1000
        sleep: 10

    - name: Gather facts
      ansible.builtin.setup:

    ### raw with unicode arg and output

    - name: Raw with unicode arg and output
      ansible.builtin.raw: echo 汉语
      register: command

    - name: Check output of raw with unicode arg and output
      ansible.builtin.assert:
        that:
          - "'汉语' in command.stdout"
          - command is changed # as of 2.2, raw should default to changed: true for consistency w/ shell/command/script modules

    ### copy local file with unicode filename and content

    - name: Create local file with unicode filename and content
      ansible.builtin.lineinfile:
        dest: "{{ local_file }}"
        create: true
        line: 汉语
        mode: "0755"
      delegate_to: localhost

    - name: Remove remote file with unicode filename and content
      ansible.windows.win_file:
        path: "{{ remote_file }}"
        state: absent

    - name: Create remote directory with unicode name
      ansible.windows.win_file:
        path: "{{ remote_dir }}"
        state: directory

    - name: Copy local file with unicode filename and content
      ansible.windows.win_copy:
        src: "{{ local_file }}"
        dest: "{{ remote_file }}"

    ### fetch remote file with unicode filename and content

    - name: Remove local file with unicode filename and content
      ansible.builtin.file:
        path: "{{ local_file }}"
        state: absent
      delegate_to: localhost

    - name: Fetch remote file with unicode filename and content
      ansible.builtin.fetch:
        src: "{{ remote_file }}"
        dest: "{{ local_file }}"
        fail_on_missing: true
        validate_checksum: true
        flat: true

    ### remove local and remote temp files

    - name: Remove local temp file
      ansible.builtin.file:
        path: "{{ local_file }}"
        state: absent
      delegate_to: localhost

    - name: Remove remote temp file
      ansible.windows.win_file:
        path: "{{ remote_file }}"
        state: absent

    ### copy an empty file
    - name: Copy an empty file
      ansible.windows.win_copy:
        content: ''
        dest: "{{ remote_empty_file }}"

    - name: Stat empty file
      ansible.windows.win_stat:
        path: "{{ remote_empty_file }}"
      register: stat_empty_file_cmd

    - name: Check that empty file exists
      ansible.builtin.assert:
        that:
          - stat_empty_file_cmd.stat.isreg # it is a regular file
          - stat_empty_file_cmd.stat.size == 0
