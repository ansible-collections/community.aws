---
- name: 'dms_endpoint integration tests'
  collections:
    - amazon.aws
  module_defaults:
    group/aws:
      access_key: '{{ aws_access_key }}'
      secret_key: '{{ aws_secret_key }}'
      session_token: '{{ security_token | default(omit) }}'
      region: '{{ aws_region }}'
  block:

    - name: create endpoints
      dms_endpoint:
          state: present
          endpointidentifier: "{{ dms_identifier }}"
          endpointtype: source
          enginename: aurora
          username: testing
          password: testint1234
          servername: "{{ resource_prefix }}.exampledomain.com"
          port: 3306
          databasename: 'testdb'
          sslmode: none
      register: result

    - assert:
        that:
          - result is changed
          - result is not failed

    - name: create endpoints no change
      dms_endpoint:
          state: present
          endpointidentifier: "{{ dms_identifier }}"
          endpointtype: source
          enginename: aurora
          username: testing
          password: testint1234
          servername: "{{ resource_prefix }}.exampledomain.com"
          port: 3306
          databasename: 'testdb'
          sslmode: none
      register: result

    - assert:
        that:
          - result is not changed
          - result is not failed

    - name: update endpoints
      dms_endpoint:
        state: present
        endpointidentifier: "{{ dms_identifier }}"
        endpointtype: source
        enginename: aurora
        username: testing
        password: testint1234
        servername: "{{ resource_prefix }}.exampledomain.com"
        port: 3306
        databasename: 'testdb2'
        sslmode: none
      register: result

    - assert:
        that:
          - result is changed
          - result is not failed

    - name: update endpoints no change
      dms_endpoint:
        state: present
        endpointidentifier: "{{ dms_identifier }}"
        endpointtype: source
        enginename: aurora
        username: testing
        password: testint1234
        servername: "{{ resource_prefix }}.exampledomain.com"
        port: 3306
        databasename: 'testdb2'
        sslmode: none
      register: result

    - assert:
        that:
          - result is not changed
          - result is not failed

    - include_tasks: 'tags.yml'

    - name: delete endpoints
      dms_endpoint:
        state: absent
        endpointidentifier: "{{ dms_identifier }}"
        wait: True
        timeout: 60
        retries: 10
      register: result

    - assert:
        that:
          - result is changed
          - result is not failed

    - name: delete endpoints no change
      dms_endpoint:
        state: absent
        endpointidentifier:  "{{ dms_identifier }}"
        wait: False
      register: result

    - assert:
        that:
          - result is not changed
          - result is not failed

  always:
    - name: delete endpoints
      dms_endpoint:
        state: absent
        endpointidentifier: "{{ dms_identifier }}"
        endpointtype: source
        enginename: aurora
        username: testing
        password: testint1234
        servername: "{{ resource_prefix }}.exampledomain.com"
        port: 3306
        databasename: 'testdb'
        sslmode: none
        wait: True
        timeout: 60
        retries: 10
      ignore_errors: True
