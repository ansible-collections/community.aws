- block:
    - name: Create IAM role for test
      iam_role:
        name: "{{ test_role_name }}-1"
        assume_role_policy_document: "{{ lookup('file','assume-role-policy.json') }}"
        state: present
        create_instance_profile: yes
        managed_policy:
        - AWSDenyAll
      register: iam_role

    - name: Create second IAM role for test
      iam_role:
        name: "{{ test_role_name }}-2"
        assume_role_policy_document: "{{ lookup('file','assume-role-policy.json') }}"
        state: present
        create_instance_profile: yes
        managed_policy:
        - AWSDenyAll
      register: iam_role_2

    - name: Make instance with an instance_role
      ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ ec2_ami_image }}"
        instance_type: t2.micro
        iam_instance_profile: "{{ test_role_name }}-1"
      register: template_with_role

    - assert:
        that:
          - 'template_with_role.default_template.launch_template_data.iam_instance_profile.arn == iam_role.arn.replace(":role/", ":instance-profile/")'

    - name: Create template again, with no change to instance_role
      ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ ec2_ami_image }}"
        instance_type: t2.micro
        iam_instance_profile: "{{ test_role_name }}-1"
      register: template_with_role

    - assert:
        that:
          - 'template_with_role.default_template.launch_template_data.iam_instance_profile.arn == iam_role.arn.replace(":role/", ":instance-profile/")'
          - 'template_with_role is not changed'

    - name: Update instance with new instance_role
      ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ ec2_ami_image }}"
        instance_type: t2.micro
        iam_instance_profile: "{{ test_role_name }}-2"
      register: template_with_updated_role

    - assert:
        that:
          - 'template_with_updated_role.default_template.launch_template_data.iam_instance_profile.arn == iam_role_2.arn.replace(":role/", ":instance-profile/")'
          - 'template_with_updated_role.default_template.launch_template_data.iam_instance_profile.arn == iam_role_2.arn.replace(":role/", ":instance-profile/")'
          - 'template_with_role.default_template.version_number < template_with_updated_role.default_template.version_number'
          - 'template_with_updated_role is changed'
          - 'template_with_updated_role is not failed'

    - name: Re-set with same new instance_role
      ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ ec2_ami_image }}"
        instance_type: t2.micro
        iam_instance_profile: "{{ test_role_name }}-2"
      register: template_with_updated_role

    - assert:
        that:
          - 'template_with_updated_role is not changed'
          - 'template_with_updated_role.default_template.launch_template_data.iam_instance_profile.arn == iam_role_2.arn.replace(":role/", ":instance-profile/")'

    - name: Update instance with original instance_role (pass profile ARN)
      ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ ec2_ami_image }}"
        instance_type: t2.micro
        # By default an instance profile will be created with the same name as the role
        iam_instance_profile: '{{ iam_role.arn.replace(":role/", ":instance-profile/") }}'
      register: template_with_updated_role

    - assert:
        that:
          - 'template_with_updated_role.default_template.launch_template_data.iam_instance_profile.arn == iam_role.arn.replace(":role/", ":instance-profile/")'
          - 'template_with_updated_role.default_template.launch_template_data.iam_instance_profile.arn == iam_role.arn.replace(":role/", ":instance-profile/")'
          - 'template_with_role.default_template.version_number < template_with_updated_role.default_template.version_number'
          - 'template_with_updated_role is changed'
          - 'template_with_updated_role is not failed'

    - name: Re-set with same new instance_role (pass profile ARN)
      ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ ec2_ami_image }}"
        instance_type: t2.micro
        iam_instance_profile: '{{ iam_role.arn.replace(":role/", ":instance-profile/") }}'
      register: template_with_updated_role

    - assert:
        that:
          - 'template_with_updated_role is not changed'
          - 'template_with_updated_role.default_template.launch_template_data.iam_instance_profile.arn == iam_role.arn.replace(":role/", ":instance-profile/")'

  always:
    - name: delete launch template
      ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        state: absent
      register: lt_removed
      until: lt_removed is not failed
      ignore_errors: yes
      retries: 10
    - name: Delete IAM role for test
      iam_role:
        name: "{{ test_role_name }}-1"
        assume_role_policy_document: "{{ lookup('file','assume-role-policy.json') }}"
        state: absent
        delete_instance_profile: yes
      register: iam_removed
      until: iam_removed is not failed
      ignore_errors: yes
      retries: 10
    - name: Delete IAM role for test
      iam_role:
        name: "{{ test_role_name }}-2"
        assume_role_policy_document: "{{ lookup('file','assume-role-policy.json') }}"
        state: absent
        delete_instance_profile: yes
      register: iam_2_removed
      until: iam_2_removed is not failed
      ignore_errors: yes
      retries: 10
