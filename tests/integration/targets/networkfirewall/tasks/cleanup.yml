---
#
# We can't start deleting the other resources until the firewalls have finished
# detatching from the subnets
#
- name: 'Fetch all firewalls'
  networkfirewall_info: {}
  register: account_firewalls_info
  ignore_errors: true

- name: 'Get a list of all firewalls matching {{ firewall_name_prefix }}'
  set_fact:
    matching_firewalls: '{{ account_firewalls_info.firewall_list | select("search", firewall_name_prefix) | list }}'
  ignore_errors: true

- name: 'Delete matching firewalls'
  networkfirewall:
    arn: '{{ item }}'
    state: absent
    delete_protection: False
    wait: True
  ignore_errors: true
  loop: '{{ matching_firewalls }}'

#
# Policies can take a while to delete, but we can start the process, trigger the
# deletion of the Subnets/VPC and then come back and delete the Rule Groups
#
- name: 'Fetch all policies'
  networkfirewall_policy_info: {}
  register: account_policies_info
  ignore_errors: true

- name: 'Get a list of all rules matching {{ policy_name_prefix }}'
  set_fact:
    matching_policies: '{{ account_policies_info.policy_list | select("search", policy_name_prefix) | list }}'
  ignore_errors: true

- name: 'Delete matching policies'
  networkfirewall_policy:
    arn: '{{ item }}'
    state: absent
    wait: False
  ignore_errors: true
  loop: '{{ matching_policies }}'

- name: 'Start deletion of subnets'
  ec2_vpc_subnet:
    state: absent
    cidr: '{{ item.cidr }}'
    vpc_id: '{{ item.vpc_id }}'
    wait: False
  loop:
  - cidr: '{{ subnet_cidr_a_1 }}'
    vpc_id: '{{ vpc_id_a }}'
  - cidr: '{{ subnet_cidr_a_2 }}'
    vpc_id: '{{ vpc_id_a }}'
  - cidr: '{{ subnet_cidr_a_3 }}'
    vpc_id: '{{ vpc_id_a }}'
  - cidr: '{{ subnet_cidr_b_1 }}'
    vpc_id: '{{ vpc_id_b }}'
  - cidr: '{{ subnet_cidr_b_2 }}'
    vpc_id: '{{ vpc_id_b }}'
  - cidr: '{{ subnet_cidr_a_1a }}'
    vpc_id: '{{ vpc_id_a }}'
  ignore_errors: True

- name: 'Wait for deletion of subnets'
  ec2_vpc_subnet:
    state: absent
    cidr: '{{ item.cidr }}'
    vpc_id: '{{ item.vpc_id }}'
    wait: True
  loop:
  - cidr: '{{ subnet_cidr_a_1 }}'
    vpc_id: '{{ vpc_id_a }}'
  - cidr: '{{ subnet_cidr_a_2 }}'
    vpc_id: '{{ vpc_id_a }}'
  - cidr: '{{ subnet_cidr_a_3 }}'
    vpc_id: '{{ vpc_id_a }}'
  - cidr: '{{ subnet_cidr_b_1 }}'
    vpc_id: '{{ vpc_id_b }}'
  - cidr: '{{ subnet_cidr_b_2 }}'
    vpc_id: '{{ vpc_id_b }}'
  - cidr: '{{ subnet_cidr_a_1a }}'
    vpc_id: '{{ vpc_id_a }}'
  ignore_errors: True

- name: 'Delete VPCs'
  ec2_vpc_net:
    state: absent
    cidr_block: '{{ item.cidr }}'
    name: '{{ item.name }}'
  loop:
  - cidr: '{{ vpc_cidr_a }}'
    name: '{{ vpc_name_a }}'
  - cidr: '{{ vpc_cidr_b }}'
    name: '{{ vpc_name_b }}'
  ignore_errors: True

- name: 'Wait for policies to finish deletion'
  networkfirewall_policy:
    arn: '{{ item }}'
    state: absent
  ignore_errors: true
  loop: '{{ matching_policies }}'

- name: 'Fetch all account rule groups'
  networkfirewall_rule_group_info: {}
  register: account_rules_info
  ignore_errors: true

- name: 'Get a list of all rules matching {{ group_name_prefix }}'
  set_fact:
    matching_rules: '{{ account_rules_info.rule_list | select("search", group_name_prefix) | list }}'
  ignore_errors: true

- name: 'Delete matching rule groups'
  networkfirewall_rule_group:
    arn: '{{ item }}'
    state: absent
  ignore_errors: true
  loop: '{{ matching_rules }}'
