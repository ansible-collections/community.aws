---
- name: run aws_glue_job integration tests
  module_defaults:
    group/aws:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      security_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"

  block:
    
    # integration test setup
    - name: create aws glue iam role for integration tests
      iam_role:
        name: '{{ item }}'
        description: IAM role needed for aws_glue_job integration tests.
        assume_role_policy_document: "{{ lookup('file', 'policy.json') }}"
        state: present
      loop:
        - my-glue-iam-role
        - my-glue-iam-role-2
    
    # resource creation 
    - name: test create glue job
      aws_glue_job:
        name: my-glue-job
        command_script_location: s3bucket/glue-job-script.py
        connections: [ my-test-connection ]
        role: my-glue-iam-role
        state: present
      register: result

    - assert:
        that:
          - result.changed

    # resource creation idempotence
    - name: test idempotence when creating same glue job
      aws_glue_job:
        name: my-glue-job
        command_script_location: s3bucket/glue-job-script.py
        connections: [ my-test-connection ]
        role: my-glue-iam-role
        state: present
      register: result

    - assert:
        that: 
          - not result.changed

    # resource modification
    # - name: test update glue job - updated connections
    #   aws_glue_job:
    #     name: my-glue-job
    #     command_script_location: s3bucket/glue-job-script.py
    #     connections: [ my-test-connection, my-test-connection-2 ]
    #     role: my-glue-iam-role
    #     state: present
    #   register: result

    # - assert:
    #     that:
    #       - result.changed
    #       - result.connections | length == 2

    # - name: test update glue job - updated connections - removed
    #   aws_glue_job:
    #     name: my-glue-job
    #     command_script_location: s3bucket/glue-job-script.py
    #     connections: [ my-test-connection ]
    #     role: my-glue-iam-role
    #     state: present
    #   register: result

    # - assert:
    #     that:
    #       - result.changed
    #       - result.connections | length == 1

    - name: test update glue job - updated default args - set
      aws_glue_job:
        name: my-glue-job
        command_script_location: s3bucket/glue-job-script.py
        connections: [ my-test-connection ]
        default_arguments: "{{ lookup('file', 'args.json') }}"
        role: my-glue-iam-role
        state: present
      register: result

    - assert:
        that:
          - result.changed
          - result.default_arguments is defined

    - name: test update glue job - updated default args - change
      aws_glue_job:
        name: my-glue-job
        command_script_location: s3bucket/glue-job-script.py
        connections: [ my-test-connection ]
        default_arguments: "{{ lookup('file', 'args2.json') }}"
        role: my-glue-iam-role
        state: present
      register: result

    - assert:
        that:
          - result.changed
          - result.default_arguments is defined

    - name: test update glue job - updated default args - remove
      aws_glue_job:
        name: my-glue-job
        command_script_location: s3bucket/glue-job-script.py
        connections: [ my-test-connection ]
        default_arguments: {}
        role: my-glue-iam-role
        state: present
      register: result

    - assert:
        that:
          - result.changed
          - result.default_arguments is defined

    - name: test update glue job - update max retries
      aws_glue_job:
        name: my-glue-job
        command_script_location: s3bucket/glue-job-script.py
        connections: [ my-test-connection ]
        max_retries: 2
        role: my-glue-iam-role
        state: present
      register: result
    
    - assert: 
        that:
          - result.changed
          - result.max_retries == 2

    - name: test update glue job - updated maximum concurrent runs
      aws_glue_job:
        name: my-glue-job
        command_script_location: s3bucket/glue-job-script.py
        connections: [ my-test-connection ]
        max_concurrent_runs: 5
        role: my-glue-iam-role
        state: present
      register: result
    
    - assert: 
        that: 
          - result.changed
          - result.execution_property.max_concurrent_runs == 5
    
    # - name: test update glue job - updated role
    #   aws_glue_job:
    #     name: my-glue-job
    #     command_script_location: s3bucket/glue-job-script.py
    #     role: my-glue-iam-role-2
    #     state: present
    #   register: result

    # - assert:
    #     that: 
    #       - result.changed
    #       - result.role == 'my-glue-iam-role-2'
    
    - name: test update glue job - updated timeout
      aws_glue_job:
        name: my-glue-job
        command_script_location: s3bucket/glue-job-script.py
        connections: [ my-test-connection ]
        role: my-glue-iam-role
        timeout: 5760
        state: present
      register: result

    - assert:
        that:
          - result.changed 
          - result.timeout == 5760

    - name: test update glue job - updated script location
      aws_glue_job:
        name: my-glue-job
        command_script_location: s3bucket/glue-job-script2.py
        connections: [ my-test-connection ]
        role: my-glue-iam-role
        state: present
      register: result
    
    - assert:
        that:
          - result.changed
          - result.command.name == 'glueetl'
          - result.command.script_location == 's3bucket/glue-job-script2.py'
    
    # resource deletion 
    - name: test delete glue job
      aws_glue_job:
        name: my-glue-job
        state: absent
      register: result
    
    - assert:
        that:
          - result.changed
  
  always:
    - name: delete glue job
      aws_glue_job:
        name: my-glue-job
        state: absent
    
    - name: cleanup iam roles used in tests
      iam_role:
        name: '{{ item }}'
        state: absent
      loop:
        - my-glue-iam-role
        - my-glue-iam-role-2