---
- module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:

    #######################
    ## Create web acl
    #######################

    - name: check_mode create web acl
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: present
        description: hallo eins
        scope: REGIONAL
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: yes
        metric_name: blub
        rules:
          - name: zwei
            priority: 2
            action:
              block: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: ddos
            statement:
              xss_match_statement:
                field_to_match:
                  body: {}
                text_transformations:
                  - type: NONE
                    priority: 0
          - name: admin_protect
            priority: 1
            override_action:
              none: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: fsd
            statement:
              managed_rule_group_statement:
                vendor_name: AWS
                name: AWSManagedRulesAdminProtectionRuleSet
        custom_response_bodies:
          too_many_requests:
            content_type: APPLICATION_JSON
            content: '{ message: "Your request has been blocked due to too many HTTP requests coming from your IP" }'
        tags:
          A: B
          C: D
      register: out
      check_mode: yes

    - name: check_mode verify create
      assert:
        that:
          - out is changed

    - name: Create web acl with custom response bodies
      wafv2_web_acl:
        name: "{{ resource_prefix }}-acl-with-response-body"
        state: present
        description: foo
        scope: REGIONAL
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: no
        rules:
          - name: rate-limit-per-IP
            priority: 1
            action:
              block:
                custom_response:
                  response_code: 429
                  custom_response_body_key: too_many_requests
            statement:
              rate_based_statement:
                limit: 1000
                aggregate_key_type: IP
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: no
              metric_name: unused
        custom_response_bodies:
          too_many_requests:
            content_type: APPLICATION_JSON
            content: '{ message: "Your request has been blocked due to too many HTTP requests coming from your IP" }'
      register: acl_with_response_body

    - name: Web acl with custom response bodies verify create
      assert:
        that:
          - acl_with_response_body is changed
          - acl_with_response_body.web_acl.rules | count == 1
          - acl_with_response_body.web_acl.custom_response_bodies.too_many_requests is defined

    - name: Update web acl with custom response bodies to remove custom response
      wafv2_web_acl:
        name: "{{ resource_prefix }}-acl-with-response-body"
        state: present
        scope: REGIONAL
        description: foo
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: no
        rules:
          - name: rate-limit-per-IP
            priority: 1
            action:
              block: {}
            statement:
              rate_based_statement:
                limit: 1000
                aggregate_key_type: IP
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: no
              metric_name: unused
        custom_response_bodies: {}

    # unfortunately the wafv2_web_acl does not return the ACL structure after an update
    # hence we have to do another task here using the info module to retrieve the latest state
    # of the ACL and then to check it
    - name: check if custom response body was really removed
      wafv2_web_acl_info:
        name: "{{ resource_prefix }}-acl-with-response-body"
        scope: REGIONAL
      register: acl_without_response_bodies

    - name: Web acl with custom response bodies verify removal of custom response
      assert:
        that:
          - acl_without_response_bodies.custom_response_bodies is undefined

    - name: create web acl
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: present
        description: hallo eins
        scope: REGIONAL
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: yes
        metric_name: blub
        rules:
          - name: zwei
            priority: 2
            action:
              block: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: ddos
            statement:
              xss_match_statement:
                field_to_match:
                  body: {}
                text_transformations:
                  - type: NONE
                    priority: 0
          - name: admin_protect
            priority: 1
            override_action:
              none: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: fsd
            statement:
              managed_rule_group_statement:
                vendor_name: AWS
                name: AWSManagedRulesAdminProtectionRuleSet
          - name: rate-limit-per-IP
            priority: 3
            action:
              block:
                custom_response:
                  response_code: 429
                  custom_response_body_key: too_many_requests
            statement:
              rate_based_statement:
                limit: 5000
                aggregate_key_type: IP
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: waf-acl-rule-rate-limit-per-IP
        custom_response_bodies:
          too_many_requests:
            content_type: APPLICATION_JSON
            content: '{ message: "Your request has been blocked due to too many HTTP requests coming from your IP" }'
        tags:
          A: B
          C: D
      register: ACL

    - name: verify create
      assert:
        that:
          - ACL is changed
          - ACL.web_acl.name == web_acl_name
          - not ACL.web_acl.visibility_config.sampled_requests_enabled
          - ACL.web_acl.rules | count == 3
          - ACL.web_acl.description == 'hallo eins'

    - name: immutable create web acl
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: present
        description: hallo eins
        scope: REGIONAL
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: yes
        metric_name: blub
        rules:
          - name: zwei
            priority: 2
            action:
              block: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: ddos
            statement:
              xss_match_statement:
                field_to_match:
                  body: {}
                text_transformations:
                  - type: NONE
                    priority: 0
          - name: admin_protect
            priority: 1
            override_action:
              none: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: fsd
            statement:
              managed_rule_group_statement:
                vendor_name: AWS
                name: AWSManagedRulesAdminProtectionRuleSet
          - name: rate-limit-per-IP
            priority: 3
            action:
              block:
                custom_response:
                  response_code: 429
                  custom_response_body_key: too_many_requests
            statement:
              rate_based_statement:
                limit: 5000
                aggregate_key_type: IP
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: waf-acl-rule-rate-limit-per-IP
        custom_response_bodies:
          too_many_requests:
            content_type: APPLICATION_JSON
            content: '{ message: "Your request has been blocked due to too many HTTP requests coming from your IP" }'
        tags:
          A: B
          C: D
      register: out

    - name: verify create
      assert:
        that:
          - out is not changed

    ###############################
    # test web acl
    ###############################
    - name: get web acl
      wafv2_web_acl_info:
        name: "{{ web_acl_name }}"
        scope: REGIONAL
      register: out

    - name: verify rules
      assert:
        that:
          - out.rules | count == 3

    - name: change web acl description
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: present
        description: hallo eins drei
        scope: REGIONAL
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: yes
        metric_name: blub
        rules:
          - name: zwei
            priority: 2
            action:
              block: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: ddos
            statement:
              xss_match_statement:
                field_to_match:
                  body: {}
                text_transformations:
                  - type: NONE
                    priority: 0
          - name: admin_protect
            priority: 1
            override_action:
              none: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: fsd
            statement:
              managed_rule_group_statement:
                vendor_name: AWS
                name: AWSManagedRulesAdminProtectionRuleSet
        tags:
          A: B
          C: D
      register: out

    - name: verify change
      assert:
        that:
          - out is changed


    - name: add 1 rules
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: present
        description: hallo eins drei
        scope: REGIONAL
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: yes
        metric_name: blub
        purge_rules: no
        rules:
          - name: bla
            priority: 8
            override_action:
              none: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: fsd
            statement:
              managed_rule_group_statement:
                vendor_name: AWS
                name: AWSManagedRulesAdminProtectionRuleSet
        tags:
          A: B
          C: D
      register: out

    - name: verify change
      assert:
        that:
          - out is changed

    - name: get web acl
      wafv2_web_acl_info:
        name: "{{ web_acl_name }}"
        scope: REGIONAL
      register: out

    - name: verify rules
      assert:
        that:
          - out.rules | count == 3

    - name: reduce rules to 1
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: present
        description: hallo eins drei
        scope: REGIONAL
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: yes
        metric_name: blub
        purge_rules: yes
        rules:
          - name: admin_protect
            priority: 1
            override_action:
              none: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: admin_protect
            statement:
              managed_rule_group_statement:
                vendor_name: AWS
                name: AWSManagedRulesAdminProtectionRuleSet
        tags:
          A: B
          C: D
      register: out

    - name: verify change
      assert:
        that:
          - out is changed

    - name: get web acl
      wafv2_web_acl_info:
        name: "{{ web_acl_name }}"
        scope: REGIONAL
      register: out

    - name: verify rules
      assert:
        that:
          - out.rules | count == 1

    - name: immutable change web acl
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: present
        description: hallo eins drei
        scope: REGIONAL
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: yes
        metric_name: blub
        rules:
          - name: admin_protect
            priority: 1
            override_action:
              none: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: admin_protect
            statement:
              managed_rule_group_statement:
                vendor_name: AWS
                name: AWSManagedRulesAdminProtectionRuleSet
        tags:
          A: B
          C: D
      register: out

    - name: verify no change
      assert:
        that:
          - out is not changed

    - name: test geo match statement
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: present
        description: hallo eins drei
        scope: REGIONAL
        default_action: Allow
        sampled_requests: no
        cloudwatch_metrics: yes
        metric_name: blub
        purge_rules: yes
        rules:
          - name: block-germany
            priority: 1
            action:
              block: {}
            visibility_config:
              sampled_requests_enabled: yes
              cloud_watch_metrics_enabled: yes
              metric_name: block-germany
            statement:
              geo_match_statement:
                country_codes:
                    - DE
        tags:
          A: B
          C: D
      register: out

    - name: verify change
      assert:
        that:
          - out is changed

    - name: re-read webacl
      wafv2_web_acl_info:
        name: "{{ web_acl_name }}"
        scope: REGIONAL
      register: out

    - name: verify geo match statement
      assert:
        that:
          - out.rules[0].statement.geo_match_statement.country_codes[0] == 'DE'

    - include_tasks: 'description.yml'
    - include_tasks: 'tags.yml'

    - name: re-read webacl
      wafv2_web_acl_info:
        name: "{{ web_acl_name }}"
        scope: REGIONAL
      register: out

    - name: verify geo match statement
      assert:
        that:
          - out.rules[0].statement.geo_match_statement.country_codes[0] == 'DE'

    - name: delete web acl
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: absent
        scope: REGIONAL
      register: out

    - name: verify change
      assert:
        that:
          - out is changed

    - name:  immutable delete web acl
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: absent
        scope: REGIONAL
      register: out

    - name: verify not change
      assert:
        that:
          - out is not changed

  always:
    ###################################
    # always delete wafv2 components
    ###################################
    - name: always delete web acl
      wafv2_web_acl:
        name: "{{ web_acl_name }}"
        state: absent
        scope: REGIONAL
      ignore_errors: true

    - name: Ensure ACL with response body is removed
      wafv2_web_acl:
        name: "{{ resource_prefix }}-acl-with-response-body"
        state: absent
        scope: REGIONAL
      ignore_errors: true
