---
# Tests the manipulation of common policy attributes
#
# In Scope:
# - Updating tags
# - Updating description
# - Waiting for deletion

- vars:
    common_policy_name: '{{ policy_name_prefix }}-Common'
    first_tags:
      'Key with Spaces': Value with spaces
      CamelCaseKey: CamelCaseValue
      pascalCaseKey: pascalCaseValue
      snake_case_key: snake_case_value
    second_tags:
      'New Key with Spaces': Value with spaces
      NewCamelCaseKey: CamelCaseValue
      newPascalCaseKey: pascalCaseValue
      new_snake_case_key: snake_case_value
    third_tags:
      'Key with Spaces': Value with spaces
      CamelCaseKey: CamelCaseValue
      pascalCaseKey: pascalCaseValue
      snake_case_key: snake_case_value
      'New Key with Spaces': Updated Value with spaces
    final_tags:
      'Key with Spaces': Value with spaces
      CamelCaseKey: CamelCaseValue
      pascalCaseKey: pascalCaseValue
      snake_case_key: snake_case_value
      'New Key with Spaces': Updated Value with spaces
      NewCamelCaseKey: CamelCaseValue
      newPascalCaseKey: pascalCaseValue
      new_snake_case_key: snake_case_value
  block:
    ###################################################################
    # Creation - Fully tested in 'default_order.yml' and 'strict_order.yml'

    - name: 'C - Create a simple firewall policy with `default` rule order'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        stateful_rule_order: 'default'
        state: present
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn.startswith(account_arn)
          - policy_metadata.firewall_policy_arn.endswith(common_policy_name)
          - policy_metadata.tags == {}
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Save Policy ID/ARN for later'
      set_fact:
        common_policy_id: '{{ policy_metadata.firewall_policy_id }}'
        common_policy_arn: '{{ policy_metadata.firewall_policy_arn }}'
      vars:
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    ###################################################################
    # Description

    - name: '(CHECK) C - Set Description'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        description: 'Example Description'
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Example Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == {}
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Set Description'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        description: 'Example Description'
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Example Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == {}
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: '(CHECK) C - Set Description (idempotency)'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        description: 'Example Description'
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Example Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == {}
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Set Description (idempotency)'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        description: 'Example Description'
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Example Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == {}
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    ###

    - name: '(CHECK) C - Update Description'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        description: 'Updated Description'
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == {}
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Update Description'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        description: 'Updated Description'
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == {}
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: '(CHECK) C - Update Description (idempotency)'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        description: 'Updated Description'
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == {}
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Update Description (idempotency)'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        description: 'Updated Description'
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == {}
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    ###################################################################
    # Tags

    - name: '(CHECK) C - Set Tags'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ first_tags }}'
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == first_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Set Tags'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ first_tags }}'
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == first_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: '(CHECK) C - Set Tags (idempotency)'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ first_tags }}'
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == first_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Set Tags (idempotency)'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ first_tags }}'
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == first_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    ###

    - name: '(CHECK) C - Update Tags with purge'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ second_tags }}'
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == second_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Update Tags with purge'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ second_tags }}'
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == second_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: '(CHECK) C - Update Tags with purge (idempotency)'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ second_tags }}'
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == second_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Update Tags with purge (idempotency)'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ second_tags }}'
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == second_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    ###

    - name: '(CHECK) C - Update tags without purge'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ third_tags }}'
        purge_tags: False
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == final_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Update tags without purge'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ third_tags }}'
        purge_tags: False
      register: common_policy

    - assert:
        that:
          - common_policy is changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == final_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: '(CHECK) C - Update tags without purge (idempotency)'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ third_tags }}'
        purge_tags: False
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == final_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    - name: 'C - Update tags without purge (idempotency)'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: present
        tags: '{{ third_tags }}'
        purge_tags: False
      register: common_policy

    - assert:
        that:
          - common_policy is not changed
          - '"policy" in common_policy'
          - '"policy" in common_policy.policy'
          - '"policy_metadata" in common_policy.policy'
          - '"description" in policy_metadata'
          - '"firewall_policy_arn" in policy_metadata'
          - '"firewall_policy_id" in policy_metadata'
          - '"firewall_policy_name" in policy_metadata'
          - '"firewall_policy_status" in policy_metadata'
          - '"tags" in policy_metadata'
          - '"stateless_default_actions" in policy_data'
          - '"stateless_fragment_default_actions" in policy_data'
          - policy_metadata.description == 'Updated Description'
          - policy_metadata.firewall_policy_name == common_policy_name
          - policy_metadata.firewall_policy_arn == common_policy_arn
          - policy_metadata.firewall_policy_id == common_policy_id
          - policy_metadata.tags == final_tags
          - policy_data.stateless_default_actions == ["aws:forward_to_sfe"]
          - policy_data.stateless_fragment_default_actions == ["aws:forward_to_sfe"]
      vars:
        policy_data: '{{ common_policy.policy.policy }}'
        policy_metadata: '{{ common_policy.policy.policy_metadata }}'

    ###################################################################
    # Delete policy

    - name: '(CHECK) C - Delete policy with default order'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: absent
      register: common_policy

    - assert:
        that:
          - common_policy is changed

    - name: 'C - Delete policy with default order'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: absent
      register: common_policy

    - assert:
        that:
          - common_policy is changed

    - name: 'C - Check policy is gone'
      networkfirewall_policy_info:
        arn: '{{ common_policy_arn }}'
      register: common_policy_info

    - assert:
        that:
          - common_policy_info is successful
          - common_policy_info.policies | length == 0

    - name: '(CHECK) C - Delete policy with default order (idempotency)'
      check_mode: True
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: absent
      register: common_policy

    - assert:
        that:
          - common_policy is not changed

    - name: 'C - Delete policy with default order (idempotency)'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: absent
      register: common_policy

    - assert:
        that:
          - common_policy is not changed

  always:
    - name: 'C - Cleanup firewall policy'
      networkfirewall_policy:
        name: '{{ common_policy_name }}'
        state: absent
        wait: False
      ignore_errors: True
