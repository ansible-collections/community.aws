- block:

  - name: test creating an ALB with invalid listener options
    elb_application_lb:
      name: "{{ alb_name }}"
      subnets: "{{ alb_subnets }}"
      security_groups: "{{ sec_group.group_id }}"
      state: present
      listeners:
        - Protocol: HTTPS
          Port: 80
          DefaultActions:
            - Type: forward
              TargetGroupName: "{{ tg_name }}"
    ignore_errors: yes
    register: alb

  - assert:
      that:
        - alb is failed

  - name: test creating an ALB without providing required listener options
    elb_application_lb:
      name: "{{ alb_name }}"
      subnets: "{{ alb_subnets }}"
      security_groups: "{{ sec_group.group_id }}"
      state: present
      listeners:
        - Port: 80
    ignore_errors: yes
    register: alb

  - assert:
      that:
        - alb is failed
        - '"missing required arguments" in alb.msg'
        - '"Protocol" in alb.msg'
        - '"DefaultActions" in alb.msg'

  - name: test creating an ALB providing an invalid listener option type
    elb_application_lb:
      name: "{{ alb_name }}"
      subnets: "{{ alb_subnets }}"
      security_groups: "{{ sec_group.group_id }}"
      state: present
      listeners:
        - Protocol: HTTP
          Port: "bad type"
          DefaultActions:
            - Type: forward
              TargetGroupName: "{{ tg_name }}"
    ignore_errors: yes
    register: alb

  - assert:
      that:
        - alb is failed
        - "'unable to convert to int' in alb.msg"

  always:
  # Cleanup
  - name: destroy ALB if created
    elb_application_lb:
      name: '{{ alb_name }}'
      state: absent
      wait: true
      wait_timeout: 600
    ignore_errors: true
