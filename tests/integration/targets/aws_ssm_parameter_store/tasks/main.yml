---
- set_fact:
    # As a lookup plugin we don't have access to module_defaults
    connection_args:
      region: "{{ aws_region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      aws_security_token: "{{ security_token | default(omit) }}"
  no_log: True

- name: 'aws_ssm lookup plugin integration tests'
  collections:
  - amazon.aws
  module_defaults:
    group/aws:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token | default(omit) }}'
      region: '{{ aws_region }}'
  vars:
    simple_name: '/{{ ssm_key_prefix }}/Simple'
    simple_description: 'This is a simple example'
    simple_value: 'A simple VALue'
    updated_description: 'This is an updated example'
    updated_value: 'A simple VALue **UPDATED**'
  block:

  # ============================================================
  # Create

  - name: Create key/value pair in aws parameter store
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      description: '{{ simple_description }}'
      value: '{{ simple_value }}'
    register: result

  - name: Lookup a single key
    set_fact:
      lookup_value: "{{ lookup('amazon.aws.aws_ssm', simple_name, **connection_args) }}"
  - assert:
     that:
      - result is changed
      - lookup_value == simple_value
      - '"parameter_metadata" in result'
      - '"data_type" in result.parameter_metadata'
      - '"description" in result.parameter_metadata'
      - '"last_modified_date" in result.parameter_metadata'
      - '"last_modified_user" in result.parameter_metadata'
      - '"name" in result.parameter_metadata'
      - '"policies" in result.parameter_metadata'
      - '"tier" in result.parameter_metadata'
      - '"type" in result.parameter_metadata'
      - '"version" in result.parameter_metadata'
      - result.parameter_metadata.data_type == 'text'
      - result.parameter_metadata.description == simple_description
      - result.parameter_metadata.name == simple_name
      - result.parameter_metadata.policies | length == 0
      - result.parameter_metadata.tier == 'Standard'
      - result.parameter_metadata.type == 'String'

  - name: Create key/value pair in aws parameter store - idempotency
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      description: '{{ simple_description }}'
      value: '{{ simple_value }}'
    register: result

  - name: Lookup a single key
    set_fact:
      lookup_value: "{{ lookup('amazon.aws.aws_ssm', simple_name, **connection_args) }}"
  - assert:
     that:
      - result is not changed
      - lookup_value == simple_value
      - '"parameter_metadata" in result'
      - '"data_type" in result.parameter_metadata'
      - '"description" in result.parameter_metadata'
      - '"last_modified_date" in result.parameter_metadata'
      - '"last_modified_user" in result.parameter_metadata'
      - '"name" in result.parameter_metadata'
      - '"policies" in result.parameter_metadata'
      - '"tier" in result.parameter_metadata'
      - '"type" in result.parameter_metadata'
      - '"version" in result.parameter_metadata'
      - result.parameter_metadata.data_type == 'text'
      - result.parameter_metadata.description == simple_description
      - result.parameter_metadata.name == simple_name
      - result.parameter_metadata.policies | length == 0
      - result.parameter_metadata.tier == 'Standard'
      - result.parameter_metadata.type == 'String'

  # ============================================================
  # Update description

  - name: Update description
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      description: '{{ updated_description }}'
    register: result

  - name: Lookup a single key
    set_fact:
      lookup_value: "{{ lookup('amazon.aws.aws_ssm', simple_name, **connection_args) }}"
  - assert:
     that:
      - result is changed
      - lookup_value == simple_value
      - '"parameter_metadata" in result'
      - '"data_type" in result.parameter_metadata'
      - '"description" in result.parameter_metadata'
      - '"last_modified_date" in result.parameter_metadata'
      - '"last_modified_user" in result.parameter_metadata'
      - '"name" in result.parameter_metadata'
      - '"policies" in result.parameter_metadata'
      - '"tier" in result.parameter_metadata'
      - '"type" in result.parameter_metadata'
      - '"version" in result.parameter_metadata'
      - result.parameter_metadata.data_type == 'text'
      #- result.parameter_metadata.description == updated_description
      - result.parameter_metadata.name == simple_name
      - result.parameter_metadata.policies | length == 0
      - result.parameter_metadata.tier == 'Standard'
      - result.parameter_metadata.type == 'String'

  - name: Update description - idempotency
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      description: '{{ updated_description }}'
    register: result

  - name: Lookup a single key
    set_fact:
      lookup_value: "{{ lookup('amazon.aws.aws_ssm', simple_name, **connection_args) }}"
  - assert:
     that:
      - result is not changed
      - lookup_value == simple_value
      - lookup_value == simple_value
      - '"parameter_metadata" in result'
      - '"data_type" in result.parameter_metadata'
      - '"description" in result.parameter_metadata'
      - '"last_modified_date" in result.parameter_metadata'
      - '"last_modified_user" in result.parameter_metadata'
      - '"name" in result.parameter_metadata'
      - '"policies" in result.parameter_metadata'
      - '"tier" in result.parameter_metadata'
      - '"type" in result.parameter_metadata'
      - '"version" in result.parameter_metadata'
      - result.parameter_metadata.data_type == 'text'
      - result.parameter_metadata.description == updated_description
      - result.parameter_metadata.name == simple_name
      - result.parameter_metadata.policies | length == 0
      - result.parameter_metadata.tier == 'Standard'
      - result.parameter_metadata.type == 'String'
    # 2022-06-20:
    # There's a quirk in the AWS API that it doesn't seem to return updates to
    # the metadata until there's a change in the value of the parameter.  The
    # change has been made (as we'll see below) but we can't properly determine
    # idempotency
    ignore_errors: True

  # ============================================================
  # Update value

  - name: Update key/value pair in aws parameter store
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      value: '{{ updated_value }}'
    register: result

  - name: Lookup a single key
    set_fact:
      lookup_value: "{{ lookup('amazon.aws.aws_ssm', simple_name, **connection_args) }}"
  - assert:
     that:
      - result is changed
      - lookup_value == updated_value
      - '"parameter_metadata" in result'
      - '"data_type" in result.parameter_metadata'
      - '"description" in result.parameter_metadata'
      - '"last_modified_date" in result.parameter_metadata'
      - '"last_modified_user" in result.parameter_metadata'
      - '"name" in result.parameter_metadata'
      - '"policies" in result.parameter_metadata'
      - '"tier" in result.parameter_metadata'
      - '"type" in result.parameter_metadata'
      - '"version" in result.parameter_metadata'
      - result.parameter_metadata.data_type == 'text'
      - result.parameter_metadata.description == updated_description
      - result.parameter_metadata.name == simple_name
      - result.parameter_metadata.policies | length == 0
      - result.parameter_metadata.tier == 'Standard'
      - result.parameter_metadata.type == 'String'

  - name: Update key/value pair in aws parameter store - idempotency
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      value: '{{ updated_value }}'
    register: result

  - name: Lookup a single key
    set_fact:
      lookup_value: "{{ lookup('amazon.aws.aws_ssm', simple_name, **connection_args) }}"
  - assert:
     that:
      - result is not changed
      - lookup_value == updated_value
      - '"parameter_metadata" in result'
      - '"data_type" in result.parameter_metadata'
      - '"description" in result.parameter_metadata'
      - '"last_modified_date" in result.parameter_metadata'
      - '"last_modified_user" in result.parameter_metadata'
      - '"name" in result.parameter_metadata'
      - '"policies" in result.parameter_metadata'
      - '"tier" in result.parameter_metadata'
      - '"type" in result.parameter_metadata'
      - '"version" in result.parameter_metadata'
      - result.parameter_metadata.data_type == 'text'
      - result.parameter_metadata.description == updated_description
      - result.parameter_metadata.name == simple_name
      - result.parameter_metadata.policies | length == 0
      - result.parameter_metadata.tier == 'Standard'
      - result.parameter_metadata.type == 'String'

  # ============================================================
  # Complex update

  - name: Complex update to key/value pair in aws parameter store
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      value: '{{ simple_value }}'
      description: '{{ simple_description }}'
    register: result

  - name: Lookup a single key
    set_fact:
      lookup_value: "{{ lookup('amazon.aws.aws_ssm', simple_name, **connection_args) }}"
  - assert:
     that:
      - result is changed
      - lookup_value == simple_value
      - '"parameter_metadata" in result'
      - '"data_type" in result.parameter_metadata'
      - '"description" in result.parameter_metadata'
      - '"last_modified_date" in result.parameter_metadata'
      - '"last_modified_user" in result.parameter_metadata'
      - '"name" in result.parameter_metadata'
      - '"policies" in result.parameter_metadata'
      - '"tier" in result.parameter_metadata'
      - '"type" in result.parameter_metadata'
      - '"version" in result.parameter_metadata'
      - result.parameter_metadata.data_type == 'text'
      - result.parameter_metadata.description == simple_description
      - result.parameter_metadata.name == simple_name
      - result.parameter_metadata.policies | length == 0
      - result.parameter_metadata.tier == 'Standard'
      - result.parameter_metadata.type == 'String'

  - name: Complex update to key/value pair in aws parameter store - idempotency
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      value: '{{ simple_value }}'
      description: '{{ simple_description }}'
    register: result

  - name: Lookup a single key
    set_fact:
      lookup_value: "{{ lookup('amazon.aws.aws_ssm', simple_name, **connection_args) }}"
  - assert:
     that:
      - result is not changed
      - lookup_value == simple_value
      - '"parameter_metadata" in result'
      - '"data_type" in result.parameter_metadata'
      - '"description" in result.parameter_metadata'
      - '"last_modified_date" in result.parameter_metadata'
      - '"last_modified_user" in result.parameter_metadata'
      - '"name" in result.parameter_metadata'
      - '"policies" in result.parameter_metadata'
      - '"tier" in result.parameter_metadata'
      - '"type" in result.parameter_metadata'
      - '"version" in result.parameter_metadata'
      - result.parameter_metadata.data_type == 'text'
      - result.parameter_metadata.description == simple_description
      - result.parameter_metadata.name == simple_name
      - result.parameter_metadata.policies | length == 0
      - result.parameter_metadata.tier == 'Standard'
      - result.parameter_metadata.type == 'String'

  # ============================================================
  # Delete

  - name: Delete key/value pair in aws parameter store
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      state: absent
    register: result

  - name: Lookup a single (missing) key
    set_fact:
      lookup_value: "{{ lookup('amazon.aws.aws_ssm', simple_name, **connection_args) }}"
    register: info_result
    ignore_errors: true
  - assert:
     that:
      - result is changed
      - info_result is failed

  - name: Delete key/value pair in aws parameter store - idempotency
    aws_ssm_parameter_store:
      name: '{{ simple_name }}'
      state: absent
    register: result

  - assert:
     that:
      - result is not changed

  always:
  # ============================================================
  - name: Delete remaining key/value pairs in aws parameter store
    aws_ssm_parameter_store:
      name: "{{item}}"
      state: absent
    ignore_errors: True
    with_items:
      - '{{ simple_name }}'
