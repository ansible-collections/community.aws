- block:

    # ============================================================

    - name: create ingress and egress rules using subnet names
      ec2_vpc_nacl:
        vpc_id: "{{ vpc_ipv6_id }}"
        name: "{{ nacl_name }}"
        subnets:
          - "{{ subnet_name }}-ipv6"
        tags:
          Created_by: "Ansible test {{ resource_prefix }}"
        ingress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
          - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [300, 'icmp', 'allow', '0.0.0.0/0', 0, 8]
        egress:
          - [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
        state: 'present'
      register: nacl
    - assert:
        that:
          - nacl.nacl_id

    - set_fact:
        nacl_id: "{{ nacl.nacl_id }}"

    - name: add ipv6 entries
      ec2_vpc_nacl:
        vpc_id: "{{ vpc_ipv6_id }}"
        name: "{{ nacl_name }}"
        subnets:
          - "{{ subnet_name }}-ipv6"
        tags:
          Created_by: "Ansible test {{ resource_prefix }}"
        ingress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
          - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [205, 'tcp', 'allow', '::/0', null, null, 80, 80]
          - [300, 'icmp', 'allow', '0.0.0.0/0', 0, 8]
          - [305, 'ipv6-icmp', 'allow', '::/0', 0, 8]
        egress:
          - [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
          - [105, 'all', 'allow', '::/0', null, null, null, null]
        state: 'present'
      register: nacl

    - assert:
       that:
         - nacl.changed
         - nacl.nacl_id == nacl_id

    - name: get network ACL facts (test that it works with ipv6 entries)
      ec2_vpc_nacl_info:
        nacl_ids:
          - "{{ nacl_id }}"
      register: nacl_facts

    - name: assert the nacl has the correct attributes
      assert:
        that:
          - nacl_facts.nacls | length == 1
          - nacl_facts.nacls[0].ingress | length == 5
          - nacl_facts.nacls[0].egress | length == 2

    - name: purge ingress entries
      ec2_vpc_nacl:
        vpc_id: "{{ vpc_ipv6_id }}"
        name: "{{ nacl_name }}"
        subnets:
          - "{{ subnet_name }}-ipv6"
        tags:
          Created_by: "Ansible test {{ resource_prefix }}"
        ingress: []
        egress:
          - [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
          - [105, 'all', 'allow', '::/0', null, null, null, null]
        state: 'present'
      register: nacl

    - assert:
       that:
         - nacl.changed
         - nacl.nacl_id == nacl_id

    - name: purge egress entries
      ec2_vpc_nacl:
        vpc_id: "{{ vpc_ipv6_id }}"
        name: "{{ nacl_name }}"
        subnets:
          - "{{ subnet_name }}-ipv6"
        tags:
          Created_by: "Ansible test {{ resource_prefix }}"
        ingress: []
        egress: []
        state: 'present'
      register: nacl

    - assert:
        that:
          - nacl.changed

    - name: get network ACL facts (test that removed entries are gone)
      ec2_vpc_nacl_info:
        nacl_ids:
          - "{{ nacl_id }}"
      register: nacl_facts

    - name: assert the nacl has the correct attributes
      assert:
        that:
          - nacl_facts.nacls | length == 1
          - nacl_facts.nacls[0].ingress | length == 0
          - nacl_facts.nacls[0].egress | length == 0

  always:

    - name: remove network ACL
      ec2_vpc_nacl:
        vpc_id: "{{ vpc_ipv6_id }}"
        name: "{{ nacl_name }}"
        state: absent
      register: removed_acl
      ignore_errors: yes
