---
- name: 'aws_codebuild integration tests'
  collections:
    - amazon.aws
  module_defaults:
    group/aws:
      access_key: '{{ aws_access_key }}'
      secret_key: '{{ aws_secret_key }}'
      session_token: '{{ security_token | default(omit) }}'
      region: '{{ aws_region }}'
  block:

    # ==================== preparations ========================================

    - name: create IAM role needed for CodeBuild
      iam_role:
        name: "{{ iam_role_name }}"
        description: Role with permissions for CodeBuild actions.
        assume_role_policy_document: "{{ lookup('file', 'codebuild_iam_trust_policy.json') }}"
        state: present
      register: codebuild_iam_role

    - name: Set variable with aws account id
      set_fact:
        aws_account_id: "{{ codebuild_iam_role.iam_role.arn.split(':')[4] }}"

    # ================== integration test ==========================================

    - name: create CodeBuild project
      codebuild_project:
        name: "{{ project_name }}"
        description: Build project for testing the Ansible aws_codebuild module
        service_role: "{{ codebuild_iam_role.iam_role.arn }}"
        timeout_in_minutes: 30
        source:
          type: CODEPIPELINE
          buildspec: ''
        artifacts:
          namespace_type: NONE
          packaging: NONE
          type: CODEPIPELINE
          name: test
        environment:
          compute_type: BUILD_GENERAL1_SMALL
          privileged_mode: true
          image: 'aws/codebuild/docker:17.09.0'
          type: LINUX_CONTAINER
          environment_variables:
            - { name: 'FOO_ENV', value: 'other' }
        tags:
          purpose: 'ansible-test'
        state: present
      register: output
      retries: 10
      delay: 5
      until: output is success

    - assert:
        that:
          - "output.project.description == 'Build project for testing the Ansible aws_codebuild module'"
          - output.project.resource_tags.purpose == "ansible-test"

    - name: idempotence check rerunning same Codebuild task
      codebuild_project:
        name: "{{ project_name }}"
        description: Build project for testing the Ansible aws_codebuild module
        service_role: "{{ codebuild_iam_role.iam_role.arn }}"
        timeout_in_minutes: 30
        source:
          type: CODEPIPELINE
          buildspec: ''
        artifacts:
          namespace_type: NONE
          packaging: NONE
          type: CODEPIPELINE
          name: test
        encryption_key: 'arn:aws:kms:{{ aws_region }}:{{ aws_account_id }}:alias/aws/s3'
        environment:
          compute_type: BUILD_GENERAL1_SMALL
          privileged_mode: true
          image: 'aws/codebuild/docker:17.09.0'
          type: LINUX_CONTAINER
          environment_variables:
            - { name: 'FOO_ENV', value: 'other' }
        tags:
          purpose: 'ansible-test'
        state: present
      register: rerun_test_output

    - assert:
        that:
          - "rerun_test_output.project.created == output.project.created"
          - rerun_test_output.project.resource_tags.purpose == "ansible-test"

    - include_tasks: 'tagging.yml'
    - include_tasks: 'description.yml'

    - name: delete CodeBuild project
      codebuild_project:
        name: "{{ output.project.name }}"
        source:
          type: CODEPIPELINE
          buildspec: ''
        artifacts: {}
        state: absent
      async: 300

  # ============================== cleanup ======================================

  always:

    - name: cleanup IAM role created for CodeBuild test
      iam_role:
        name: "{{ iam_role_name }}"
        state: absent
